// Variables
$color-blur: #666;
$color-key: #469fc0;
$color-title: #b68250;
$color-redgoose: #b31e37;
$font-eng: 'Helvetica', Arial, sans-serif;

// Functions
@function prefix($property, $prefixes: (webkit moz o ms)) {
	$vendor-prefixed-properties: transform background-clip background-size;
	$result: ();
	@each $prefix in $prefixes {
		@if index($vendor-prefixed-properties, $property) {
			$property: -#{$prefix}-#{$property}
		}
		$result: append($result, $property);
	}
	@return $result;
}
@function trans-prefix($transition, $prefix: moz) {
	$prefixed: ();
	@each $trans in $transition {
		$prop-name: nth($trans, 1);
		$vendor-prop-name: prefix($prop-name, $prefix);
		$prop-vals: nth($trans, 2);
		$prefixed: append($prefixed, ($vendor-prop-name $prop-vals), comma);
	}
	@return $prefixed;
}

// Mixin
@mixin transform($value) {
	-webkit-transform: $value;
	transform: $value;
}
@mixin transition($args...) {
	$transitions: ();
	@each $declaration in $args {
		$prop: nth($declaration, 1);
		$prop-opts: ();
		$length: length($declaration);
		@for $i from 2 through $length {
			$prop-opts: append($prop-opts, nth($declaration, $i));
		}
		$trans: ($prop, $prop-opts);
		$transitions: append($transitions, $trans, comma);
	}
	-webkit-transition: trans-prefix($transitions, webkit);
	transition: $args;
}
@mixin perspective($value) {
	-webkit-perspective: $value;
	perspective: $value;
}
@mixin backfaceVisibility($value) {
	-webkit-backface-visibility: $value;
	backface-visibility: $value;
}
@mixin linearGradient_h($color, $start, $end) {
	background: $color;
	background: -moz-linear-gradient(left, $start, $end);
	background: -webkit-linear-gradient(left, $start, $end);
	background: -o-linear-gradient(left, $start, $end);
	background: -ms-linear-gradient(left, $start, $end);
	background: linear-gradient(to right, $start, $end);
}
@mixin linearGradient_v($color, $start, $end) {
	background: $color;
	background: -moz-linear-gradient(top, $start, $end);
	background: -webkit-linear-gradient(top, $start, $end);
	background: -o-linear-gradient(top, $start, $end);
	background: -ms-linear-gradient(top, $start, $end);
	background: linear-gradient(to bottom, $start, $end);
}
@mixin flexbox() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}
@mixin flex($values) {
	-webkit-box-flex: $values;
	-moz-box-flex: $values;
	-webkit-flex: $values;
	-ms-flex: $values;
	flex: $values;
}
@mixin order($val) {
	-webkit-box-ordinal-group: $val;
	-moz-box-ordinal-group: $val;
	-ms-flex-order: $val;
	-webkit-order: $val;
	order: $val;
}
@mixin align-items($value) {
	-webkit-align-items: $value;
	align-items: $value;
}
@mixin multiline-overflow($size, $column) {
	line-height: $size; max-height: $size * $column;
	overflow: hidden; text-overflow: ellipsis;
	display: -webkit-box;
	-webkit-line-clamp: $column;
	-webkit-box-orient: vertical;
}


// Placeholder
%clearfix {
	&:after {content:''; display:block; clear: both;}
}
%ul {margin: 0; padding: 0; list-style: none;}
%button {
	display: inline-block; cursor: pointer;
	margin: 1px 2px; padding: 11px 20px;
	font-size: 14px; color: #fff; text-decoration: none;
	border: none; background: #a5acb0;
	&.size-small {padding: 8px 15px; font-size: 12px;}
	&.col-key {color: #fff; background: #72b3ca;}
	&.block {display: block; margin-left: 0; margin-right: 0;}
}
%gs-icon {
	font-family: 'goose-icons', sans-serif;
	speak: none;
	font-style: normal; font-weight: normal; font-variant: normal; text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}


// Elements
*, *:before, *:after {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}
body {
	margin:0; padding:0;
	font-size: 16px; color: #111;
	font-family: 'Apple SD Gothic Neo', 'NanumGothic', 'MalgunGothic', 'Helvetica', sans-serif;
	min-width: 320px;
	-webkit-text-size-adjust: none;
}
img, video, iframe {max-width: 100%;}
img {border: none;}
table {
	border-collapse: collapse; border-spacing: 0;
	th, td {padding: 0;}
}
form, figure, dl, dd {margin: 0;}
fieldset {margin: 0; padding: 0; border: none;}
ul, ol {margin: 15px 0; padding: 0 0 0 25px;}
a {color: #2281d8;}
hr {
	border: none; height: 1px; clear: both; background: #ccc;
	&.space {background: none; margin: 12px 0;}
	&.clear {margin: 0; height: 0; clear: both;}
}


// Attributes
.blind {
	position: absolute; overflow: hidden; visibility: hidden;
	width: 0; height: 0; font-size: 0; line-height: 0;
}
.dis-ib {display: inline-block;}


// text color
.gs-color-red {color: #e80000;}


// Forms
input[type=email], input[type=text], input[type=password], input[type=number], input[type=tel], textarea {
	margin: 2px 3px; padding: 8px 8px;
	font-size: 14px; color: #333; vertical-align: middle;
	background: white; border: 1px solid #acacac;
	box-shadow:inset 0 2px 3px 0 rgba(0,0,0,.15);
	border-radius: 0;
	&.no-margin {margin: 0;}
	&.block {width: 100%; margin-left: 0; margin-right: 0;}
	&.error {border: 1px solid #e80000; color: #e80000;}
	&[disabled], &[readonly] {background: #ddd;}
}
select {
	height: 30px;
	font-size: 13px;
	border: 1px solid #aaa; border-radius: .1em;
}


// Button
.gs-button {@extend %button;}
button.gs-button {
	-webkit-appearance:none; border:none;
	&.block {width: 100%;}
}


// Buttons group
.gs-btn-group {
	margin: 15px 0; padding: 0 8px;
	font-size: 0;
	&.right {text-align: right;}
	@media all and (max-width:640px) {
		@include flexbox();
		padding: 0;
		> * {
			margin: 0 0 0 1px; padding-left: 3px; padding-right: 3px;
			text-align: center;
			@include flex(1);
			&:first-child {margin-left: 0;}
		}
	}
	.gs-webz & {margin-bottom:0;}
}


// Headding
.gs-headding {
	padding: 0 10px 5px; position: relative;
	border-bottom: 1px solid #ccc;
	h1 {
		margin: 0; line-height: 28px;
		font-size: 24px; color: #111;
		a {text-decoration: none; color: #111; vertical-align: middle;}
	}
	> p {margin: 0 0 3px; font-size: 12px; color: #666;}
	.icn-help {
		display: inline-block; margin-top: -2px; margin-left: 3px; padding: 4px;
		font-size: 10px; color: #fff;
		vertical-align: middle;
		border-radius: 50%; background: $color-redgoose;
	}
	@media all and (max-width:640px) {
		margin-bottom: 0; padding-left: 10px;
		h1 {font-size: 20px;}
		.icn-help {font-size: 9px; padding: 3px;}
	}
}


// Table
.gs-table {
	width: 100%;
	caption {padding: 0 0 8px; text-align: left;}
	th, td {
		border: 1px solid #ccc;
		padding: 8px 10px;
	}
	td {
		&.center {text-align: center;}
		&.nowrap {white-space: nowrap;}
	}
	thead th {background: #f1f1f1; font-weight: bold;}
}


// Paginate
.gs-paginate {
	margin: 15px 0;
	font-size: 0;
	a, strong {
		margin: 0 2px; display: inline-block; padding: 10px 13px;
		color: #fff; text-align: center;
		font-size: 14px;
	}
	a {text-decoration: none; background: #a5acb0;}
	strong {background: #72b3ca;}
	@media all and (max-width:640px) {
		text-align: center;
	}
	.gs-webz & {margin-bottom: 0;}
}


// Webzine
.gs-webz {
	display: table; width: 100%;
	> * {display: table-cell; vertical-align: middle;}
	@media all and (max-width:640px) {
		display: block; width: auto;
		> * {display: block;}
	}
	&.top > * {vertical-align: top;}
}


// text parenthesis
em[class^=gs-brk-] {font-style: normal;}
.gs-brk-type {
	&:before {content: '['}
	&:after {content: ']'}
}
.gs-brk-cnt {
	&:before {content: '('}
	&:after {content: ')'}
}
.gs-brk-quot {
	&:before {content: '"'}
	&:after {content: '"'}
}
