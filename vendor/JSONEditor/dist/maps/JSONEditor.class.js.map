{"version":3,"sources":["JSONEditor.class.js"],"names":["log","o","console","Object","size","obj","key","hasOwnProperty","JSONEditor","$wrap","usePreview","Util","this","removeBR","element","find","replaceWith","stringLimiter","limit","str","text","length","substring","removeSpace","replace","Context","getParent","tree","self","parent","$el","active","template","node","role","roles","$","createContext","append","contextEvent","$nav","on","e","stopPropagation","typeItem","attr","context","off","insertItem","duplicateItem","removeItem","$item","button","css","left","position","outerWidth","top","removeAttr","$index","$preview","util","contextTree","init","createRoot","prepend","addClass","updatePreview","type","selectButtons","$li","children","updateCount","itemCount","updateNumber","$items","each","k","inputCheckEvent","$strong","$inputs","buttonsEvent","$buttons","$node","closest","filter","toggleClass","dragEvent","adjustment","beforeItem","sortable","itemSelector","handle","group","pullPlaceholder","onDrop","item","targetContainer","_super","el","onDragStart","container","offset","pointer","rootGroup","onDrag","isValidTarget","$ul","remove","$active","data","complete","value","$key","$value","parseInt","$target","$copy","clone","insertAfter","andSelf","$parentItem","items","getData","index","Array","isArray","$root","$lis","$this","$parent","push","json","JSON","stringify","prototype"],"mappings":"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","file":"JSONEditor.class.js","sourcesContent":["function log(o){console.log(o);}\r\nObject.size = function(obj) {\r\n    var size = 0, key;\r\n    for (key in obj) {\r\n        if (obj.hasOwnProperty(key)) size++;\r\n    }\r\n    return size;\r\n};\r\n\r\n\r\n/**\r\n * JSON Editor Class\r\n *\r\n * author : Redgoose (2014.03)\r\n * version : 0.3\r\n * website : http://redgoose.me\r\n * @Param {Array} $wrap : json editor 껍데기 엘리먼트\r\n * @Param {Boolean} usePreview : 프리뷰 창을 사용할건지에 대한 값\r\n * @return void\r\n */\r\nvar JSONEditor = function($wrap, usePreview)\r\n{\r\n\tvar self = this;\r\n\r\n\tself.$wrap = $wrap;\r\n\tself.$index = null;\r\n\tself.$preview = null;\r\n\r\n\tvar util = new Util();\r\n\tvar context = new Context(this, this.contextTree);\r\n\r\n\r\n\t/**\r\n\t * Util Class\r\n\t */\r\n\tfunction Util()\r\n\t{\r\n\t\t/**\r\n\t\t * remove <br/>\r\n\t\t * <br/> 엘리먼트를 공백으로 변환시켜줍니다.\r\n\t\t *\r\n\t\t * @param {DOM} element : 컨테이너 엘리먼트\r\n\t\t**/\r\n\t\tthis.removeBR = function (element)\r\n\t\t{\r\n\t\t\telement.find('br').replaceWith(' ');\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * string limiter\r\n\t\t * 글자길이를 체크하여 지정된 수치보다 높으면 잘라버립니다.\r\n\t\t *\r\n\t\t * @param {DOM} element : 글이 들어있는 엘리먼트\r\n\t\t * @param {Number} limit : 글자 갯수제한\r\n\t\t**/\r\n\t\tthis.stringLimiter = function(element, limit)\r\n\t\t{\r\n\t\t\tvar str = element.text();\r\n\t\t\tif (str.length > limit)\r\n\t\t\t{\r\n\t\t\t\telement.text(str.substring(0, limit));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * remove space\r\n\t\t * 공백을 없애줍니다.\r\n\t\t *\r\n\t\t * @param {DOM} element : 내용이 적혀있는 엘리먼트입니다.\r\n\t\t**/\r\n\t\tthis.removeSpace = function(element)\r\n\t\t{\r\n\t\t\telement.text(element.text().replace(/\\s+/g, ''));\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Context class\r\n     * 기능을 실행하는 context 메뉴\r\n\t *\r\n\t * @param {JSONEditor} getParent\r\n\t * @param {Array} tree\r\n\t */\r\n\tfunction Context(getParent, tree)\r\n\t{\r\n\t\tvar self = this;\r\n\t\tvar parent = getParent;\r\n\r\n\t\tself.$el = null;\r\n\t\tself.active = null;\r\n\r\n\t\t/**\r\n\t\t * context template\r\n\t\t *\r\n\t\t * @param {Object} obj\r\n\t\t * @return {DOM}\r\n\t\t */\r\n\t\tvar template = function(obj)\r\n\t\t{\r\n\t\t\tfunction node(obj)\r\n\t\t\t{\r\n\t\t\t\tvar str = '<ul>';\r\n\t\t\t\tfor (var o in obj)\r\n\t\t\t\t{\r\n\t\t\t\t\tstr += '<li role=\"' + obj[o].role + '\">';\r\n\t\t\t\t\tif (obj[o].roles)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstr += '<div>';\r\n\t\t\t\t\t\tstr += node(obj[o].roles);\r\n\t\t\t\t\t\tstr += '</div>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += '<button type=\"button\">' + obj[o].role + '</button>';\r\n\t\t\t\t\tstr += '</li>';\r\n\t\t\t\t}\r\n\t\t\t\tstr += '</ul>';\r\n\t\t\t\treturn str;\r\n\t\t\t}\r\n\t\t\tvar str = '<nav class=\"context\">';\r\n\t\t\tstr += node(obj);\r\n\t\t\tstr += '</nav>';\r\n\t\t\treturn $(str);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * create context\r\n\t\t */\r\n\t\tvar createContext = function()\r\n\t\t{\r\n\t\t\tself.$el = template(tree);\r\n\t\t\tparent.$wrap.append(self.$el);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * context event\r\n\t\t *\r\n\t\t * @param {DOM} $nav\r\n\t\t */\r\n\t\tvar contextEvent = function($nav)\r\n\t\t{\r\n\t\t\t$nav.find('li').on('click', function(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\t$nav.find('li[role=Type] li').on('click', function(){\r\n\t\t\t\tparent.typeItem(self.active, $(this).attr('role'));\r\n\t\t\t\tcontext.off();\r\n\t\t\t});\r\n\r\n\t\t\t$nav.find('li[role=Insert] li').on('click', function(){\r\n\t\t\t\tparent.insertItem(self.active, $(this).attr('role'), null);\r\n\t\t\t\tcontext.off();\r\n\t\t\t});\r\n\r\n\t\t\t$nav.find('li[role=Duplicate]').on('click', function(){\r\n\t\t\t\tparent.duplicateItem(self.active);\r\n\t\t\t\tcontext.off();\r\n\t\t\t});\r\n\r\n\t\t\t$nav.find('li[role=Remove]').on('click', function(){\r\n\t\t\t\tparent.removeItem(self.active);\r\n\t\t\t\tcontext.off();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * context open\r\n\t\t *\r\n\t\t * @param {DOM} $item\r\n\t\t */\r\n\t\tthis.on = function($item, button)\r\n\t\t{\r\n\t\t\tself.active = $item;\r\n\t\t\tself.$el\r\n\t\t\t\t.attr('type', $item.attr('type'))\r\n\t\t\t\t.css({\r\n\t\t\t\t\tleft : button.position().left + button.outerWidth()\r\n\t\t\t\t\t,top : button.position().top - 3\r\n\t\t\t\t})\r\n\t\t\t;\r\n\t\t\tif ($item.attr('loc') == 'root')\r\n\t\t\t{\r\n\t\t\t\tself.$el.attr('loc', $item.attr('loc'))\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tself.$el.removeAttr('loc');\r\n\t\t\t}\r\n\t\t\t$('html').on('click', function(){\r\n\t\t\t\tself.off();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * context close\r\n\t\t */\r\n\t\tthis.off = function()\r\n\t\t{\r\n\t\t\tself.active = null;\r\n\t\t\tself.$el.removeAttr('type');\r\n\t\t\t$('html').off('click');\r\n\t\t}\r\n\r\n\r\n\t\t// act\r\n\t\tcreateContext();\r\n\t\tcontextEvent(self.$el);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * init\r\n\t */\r\n\tvar init = function()\r\n\t{\r\n\t\tself.$index = $('<div class=\"index\" />');\r\n\t\tself.$index.append(createRoot());\r\n\t\tself.$wrap.prepend(self.$index);\r\n\r\n\t\tself.$preview = $('<pre class=\"preview\" />');\r\n\t\tself.$wrap.append(self.$preview);\r\n\t\tself.$wrap.addClass('preview');\r\n\r\n\t\tupdatePreview();\r\n\t}\r\n\r\n\t/**\r\n\t * node template\r\n\t *\r\n\t * @param {String} type\r\n\t * @return {DOM}\r\n\t */\r\n\tvar template = function(type)\r\n\t{\r\n\t\tvar str = '<li type=\"' + type + '\" class=\"on\">\\n';\r\n\t\tstr += '<dl>';\r\n\t\tstr += '<dt>';\r\n\t\tstr += '<button type=\"button\" role=\"move\">move</button>';\r\n\t\tstr += '<button type=\"button\" role=\"control\">control</button>';\r\n\t\tstr += '<em class=\"no\">0</em>';\r\n\t\tstr += '<button type=\"button\" role=\"toggle\">toggle</button>';\r\n\t\tstr += '<strong contenteditable=\"true\" spellcheck=\"false\" data-ph=\"' + type + '\"></strong>';\r\n\t\tstr += '<span class=\"type\"></span>';\r\n\t\tstr += '<em class=\"count\">0</em>';\r\n\t\tstr += '</dt>';\r\n\t\tstr += '<dd>';\r\n\t\tstr += '<span contenteditable=\"true\" spellcheck=\"false\"></span>';\r\n\t\tstr += '</dd>';\r\n\t\tstr += '</dl>';\r\n\t\tstr += '<ul></ul>';\r\n\t\tstr += '</li>';\r\n\t\treturn $(str);\r\n\t}\r\n\r\n\t/**\r\n\t * 버튼을 선택해주는 엘리먼트\r\n\t *\r\n\t * @param {DOM} $li : 버튼을 선택하는 li엘리먼트\r\n\t * @return {DOM} : 버튼 엘리먼트\r\n\t */\r\n\tvar selectButtons = function($li)\r\n\t{\r\n\t\treturn $li.children('dl').children('dt').children('button');\r\n\t}\r\n\r\n\t/**\r\n\t * Object나 Array 카운트 갱신\r\n\t *\r\n\t * @param {DOM} $li : 카운트 갱신할 li 엘리먼트\r\n\t */\r\n\tvar updateCount = function($li)\r\n\t{\r\n\t\tvar itemCount = $li.find('> ul > li').length;\r\n\t\t$li.find('> dl em.count').text(itemCount);\r\n\t}\r\n\r\n\t/**\r\n\t * 배열번호에 사용되는 순서에 대한 번호갱신\r\n\t *\r\n\t * @param {DOM} $items\r\n\t */\r\n\tvar updateNumber = function($items)\r\n\t{\r\n\t\t$items.each(function(k){\r\n\t\t\t$(this).find('> dl > dt > em.no').text(k);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * key값 텍스트 인풋에서 포커스가 떨어졌을때 문자 검사를 해주는 역할을 한다.\r\n\t *\r\n\t * @param {DOM} $item\r\n\t */\r\n\tvar inputCheckEvent = function($item)\r\n\t{\r\n\t\tvar $strong = $item.find('> dl > dt > strong');\r\n\t\tvar $inputs = $item.find('> dl > dt > strong, > dl > dd > span');\r\n\r\n\t\t$strong.on('blur', function(){\r\n\t\t\tutil.removeBR($(this));\r\n\t\t\tutil.removeSpace($(this));\r\n\t\t\tutil.stringLimiter($(this), 20);\r\n\t\t});\r\n\t\t// preview update\r\n\t\t$inputs.on('blur', function(){\r\n\t\t\tupdatePreview();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Context와 접었더 펴는 버튼 이벤트를 만들어준다.\r\n\t *\r\n\t * @param {DOM} buttons\r\n\t */\r\n\tvar buttonsEvent = function($buttons)\r\n\t{\r\n\t\tvar $node = $buttons.closest('li');\r\n\r\n\t\t// control\r\n\t\t$buttons.filter('[role=control]').on('click', function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\tcontext.off($node);\r\n\t\t\tcontext.on($node, $(this));\r\n\t\t});\r\n\r\n\t\t// toggle\r\n\t\t$buttons.filter('[role=toggle]').on('click', function(e){\r\n\t\t\t$node.toggleClass('on')\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * drag event\r\n\t *\r\n\t * @param {DOM} $item\r\n\t */\r\n\tvar dragEvent = function($item)\r\n\t{\r\n\t\t// drag and drop event\r\n\t\tvar adjustment, beforeItem;\r\n\t\t$item.children('ul').sortable({\r\n\t\t\titemSelector : 'li'\r\n\t\t\t,handle : 'button[role=move]'\r\n\t\t\t,group : 'index'\r\n\t\t\t,pullPlaceholder: true\r\n\t\t\t,onDrop : function(item, targetContainer, _super) {\r\n\t\t\t\t_super(item);\r\n\r\n\t\t\t\tupdateCount(beforeItem.parent());\r\n\t\t\t\tupdateCount(targetContainer.el.parent());\r\n\r\n\t\t\t\tupdateNumber(beforeItem.children());\r\n\t\t\t\tupdateNumber(targetContainer.el.children());\r\n\r\n\t\t\t\tupdatePreview();\r\n\r\n\t\t\t\tbeforeItem = adjustment = null;\r\n\t\t\t}\r\n\t\t\t,onDragStart : function($el, container, _super) {\r\n\t\t\t\tvar\r\n\t\t\t\t\toffset = $el.offset()\r\n\t\t\t\t\t,pointer = container.rootGroup.pointer\r\n\t\t\t\t;\r\n\t\t\t\tadjustment = {\r\n\t\t\t\t\tleft: pointer.left - offset.left\r\n\t\t\t\t\t,top: pointer.top - offset.top\r\n\t\t\t\t};\r\n\t\t\t\tbeforeItem = container.el;\r\n\t\t\t\t_super($el, container)\r\n\t\t\t}\r\n\t\t\t,onDrag : function($el, position) {\r\n\t\t\t\t$el.css({\r\n\t\t\t\t\tleft: position.left - adjustment.left\r\n\t\t\t\t\t,top: position.top - adjustment.top\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t,isValidTarget : function ($el, container) {\r\n\t\t\t\treturn (container.el.parent().attr('type') == 'String') ? false : true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create root node\r\n\t *\r\n\t * @return {DOM}\r\n\t */\r\n\tvar createRoot = function()\r\n\t{\r\n\t\tvar $ul = $('<ul/>');\r\n\t\tvar $li = template('Object');\r\n\r\n\t\t$li.attr('loc', 'root');\r\n\t\t$li.find('[contenteditable]').attr('contenteditable', 'false');\r\n\t\t$li.find('[role=move]').remove();\r\n\r\n\t\t$ul.append($li);\r\n\r\n\t\tbuttonsEvent(selectButtons($li));\r\n\t\tdragEvent($li);\r\n\r\n\t\treturn $ul;\r\n\t}\r\n\r\n\t/**\r\n\t * Updata preview\r\n\t */\r\n\tvar updatePreview = function()\r\n\t{\r\n\t\tself.$preview.text(self.export(5));\r\n\t}\r\n\r\n\r\n\t/**\r\n     * Insert item\r\n\t * 아이템을 삽입해준다.\r\n\t *\r\n\t * @param {DOM} $active : 선택된 아이템\r\n\t * @param {String} type : 추가할 아이템 타입 (String, Object, Array)\r\n\t * @param {Object} data : 추가할 아이템의 데이터\r\n\t * @param {Function} complete\r\n\t */\r\n\tthis.insertItem = function($active, type, data, complete)\r\n\t{\r\n\t\tvar $ul = $active.children('ul');\r\n\t\tvar $item = template(type);\r\n\r\n\t\t$item.find('em.no').text($ul.children('li').length);\r\n\r\n\t\t// push data\r\n\t\tif (data)\r\n\t\t{\r\n\t\t\t$item.find('dt strong').text(data.key);\r\n\t\t\t$item.find('dd span').text(data.value);\r\n\t\t}\r\n\r\n\t\tbuttonsEvent(selectButtons($item));\r\n\t\tinputCheckEvent($item);\r\n\t\t$active.addClass('on').children('ul').append($item);\r\n\t\tupdateCount($active);\r\n\r\n\t\tif (complete)\r\n\t\t{\r\n\t\t\tcomplete($item);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n     * Change type\r\n\t * 아이템의 타입을 바꿔준다.\r\n\t *\r\n\t * @param {DOM} active : 선택된 아이템\r\n\t * @param {String} type : 바꾸고싶은 타입 (String, Object, Array)\r\n\t */\r\n\tthis.typeItem = function($active, type)\r\n\t{\r\n        var $key = $active.find('> dl > dt > strong');\r\n        var $value = $active.find('> dl > dd > span');\r\n\r\n\t\t$active.attr('type', type);\r\n\t\t$key.attr('data-ph', type);\r\n\r\n        switch(type)\r\n        {\r\n            case \"Number\":\r\n                var value = parseInt($value.text());\r\n                value = (!value) ? 0 : value;\r\n                $value.text(value);\r\n                break;\r\n            case \"Boolean\":\r\n                $value.text(!!($value.text()));\r\n                break;\r\n        }\r\n\r\n\t\tupdatePreview();\r\n\t}\r\n\r\n\t/**\r\n     * Duplicate item\r\n\t * 아이템 복제\r\n\t *\r\n\t * @param {DOM} $target : 복사할 아이템\r\n\t */\r\n\tthis.duplicateItem = function($target)\r\n\t{\r\n\t\tvar $copy = $target.clone().insertAfter($target).find('li').andSelf();\r\n\t\t$copy.each(function(){\r\n\t\t\tbuttonsEvent(selectButtons($(this)));\r\n\t\t\tinputCheckEvent($(this));\r\n\t\t});\r\n\t\tupdateCount($target.parent().parent());\r\n\t\tupdateNumber($target.parent().children());\r\n\t\tupdatePreview();\r\n\t}\r\n\r\n\t/**\r\n     * Remove item\r\n\t * 아이템 삭제\r\n\t *\r\n\t * @param {DOM} $target\r\n\t */\r\n\tthis.removeItem = function($target)\r\n\t{\r\n\t\tvar $parentItem = $target.parent().parent();\r\n\t\t$target.remove();\r\n\t\tupdateCount($parentItem);\r\n\t\tupdatePreview();\r\n\t}\r\n\r\n    /**\r\n     * Import JSON\r\n     * 에디터로 json 데이터 가져오기(add)\r\n     *\r\n     * @param {Object} data\r\n     */\r\n    this.import = function(data)\r\n    {\r\n        function items(getData, $item)\r\n        {\r\n            $.each(getData, function(index, value){\r\n                var\r\n                    data = {key : index, value : value}\r\n                    ,type = null\r\n                ;\r\n\r\n                if (typeof value === 'string')\r\n                {\r\n                    type = 'String';\r\n                }\r\n                else if (typeof value === 'object')\r\n                {\r\n                    type = (Array.isArray(value)) ? 'Array' : 'Object';\r\n                }\r\n                else if (typeof value === 'number')\r\n                {\r\n                    type = 'Number';\r\n                }\r\n                else if (typeof value === 'boolean')\r\n                {\r\n                    type = 'Boolean';\r\n                }\r\n\r\n                self.insertItem($item, type, data, function($item){\r\n                    if (type !== 'String' && Object.size(value) > 0)\r\n                    {\r\n                        items(value, $item);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        items(data, self.$index.find('[loc=root]'));\r\n        updatePreview();\r\n    }\r\n\r\n    /**\r\n     * Replace JSON\r\n     * 에디터로 json 데이터 가져오기(replace)\r\n     *\r\n     * @param {Object} data\r\n     */\r\n    this.replace = function(data)\r\n    {\r\n        var $root = this.$index.find('[loc=root]');\r\n        var $lis = $root.find('> ul > li');\r\n\r\n        this.removeItem($lis);\r\n        if (Array.isArray(data))\r\n        {\r\n            this.typeItem($root, 'Array');\r\n        }\r\n        this.import(data);\r\n    }\r\n\r\n    /**\r\n     * 아이템 트리의 내용을 문자형태로 내보내기\r\n     *\r\n     * @return {String} : 문자로 변형된 json데이터\r\n     */\r\n    this.export = function()\r\n    {\r\n        function items($li, obj)\r\n        {\r\n            var $lis = $li.children('ul').children('li');\r\n            if ($lis.length)\r\n            {\r\n                $lis.each(function(){\r\n                    var\r\n                        $this = $(this),\r\n                        key = $this.find('> dl > dt > strong').text(),\r\n                        value = $this.find('> dl > dd > span').text(),\r\n                        $parent = $this.parent().parent()\r\n                    ;\r\n\r\n                    if (($parent.attr('type') !== 'Array') && !key)\r\n                    {\r\n                        return true;\r\n                    }\r\n\r\n                    switch($(this).attr('type'))\r\n                    {\r\n                        case 'String':\r\n                            if ($li.attr('type') == 'Array')\r\n                            {\r\n                                obj.push(value);\r\n                            }\r\n                            else\r\n                            {\r\n                                obj[key] = value;\r\n                            }\r\n                            break;\r\n                        case 'Array':\r\n                            if ($li.attr('type') == 'Array')\r\n                            {\r\n                                obj.push(items($this, new Array()));\r\n                            }\r\n                            else\r\n                            {\r\n                                obj[key] = items($this, new Array());\r\n                            }\r\n                            break;\r\n                        case 'Object':\r\n                            if ($li.attr('type') == 'Array')\r\n                            {\r\n                                obj.push(items($this, new Object()));\r\n                            }\r\n                            else\r\n                            {\r\n                                obj[key] = items($this, new Object());\r\n                            }\r\n                            break;\r\n                        case 'Number':\r\n                            if ($li.attr('type') == 'Array')\r\n                            {\r\n                                obj.push(value);\r\n                            }\r\n                            else\r\n                            {\r\n                                obj[key] = parseInt(value);\r\n                            }\r\n                            break;\r\n                        case 'Boolean':\r\n                            if ($li.attr('type') == 'Array')\r\n                            {\r\n                                obj.push(value);\r\n                            }\r\n                            else\r\n                            {\r\n                                obj[key] = (value == 'true' || value == 1) ? true : false;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n            return obj;\r\n        }\r\n\r\n        var $root = self.$index.find('[loc=root]');\r\n        var json = items(\r\n            $root\r\n            ,($root.attr('type') == 'Array') ? new Array() : new Object()\r\n        );\r\n        return JSON.stringify(json, null, '\\t');\r\n    }\r\n\r\n\r\n\t// act\r\n\tinit();\r\n\r\n}\r\n\r\n\r\n\r\n// context tree data\r\nJSONEditor.prototype.contextTree = [\r\n\t{\r\n\t\trole : 'Type'\r\n\t\t,roles : [\r\n\t\t\t{role:'Object'}\r\n\t\t\t,{role : 'Array'}\r\n\t\t\t,{role : 'String'}\r\n            ,{role : 'Number'}\r\n            ,{role : 'Boolean'}\r\n\t\t]\r\n\t}\r\n\t,{\r\n\t\trole : 'Insert'\r\n\t\t,roles : [\r\n\t\t\t{role : 'Object'}\r\n\t\t\t,{role : 'Array'}\r\n\t\t\t,{role : 'String'}\r\n            ,{role : 'Number'}\r\n            ,{role : 'Boolean'}\r\n\t\t]\r\n\t}\r\n\t,{role : 'Duplicate'}\r\n\t,{role : 'Remove'}\r\n];\r\n"],"sourceRoot":"/source/"}